<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hx.eplate.trafficdata.query.dao.write.UserInfoWriteDao">

	<insert id="save" parameterType="map" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
		INSERT INTO userinfo(
		  `username`,
		  pwd,
		  phone,
		  realname,
		  purseaddress,
		  publickey,
		  privatekey,
		  voucher,
		  uuid
		)
		VALUES
		(
			#{data.username},
			#{data.pwd},
			#{data.phone},
			#{data.realname},
			#{data.purseaddress},
			#{data.publickey},
			#{data.privatekey},
			#{data.voucher},
			#{data.uuid}
		)
	</insert>

	<insert id="saveNotNull" parameterType="map" keyProperty="id" keyColumn="id" useGeneratedKeys="true">INSERT INTO userinfo
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="data.username != null">`username`,</if>
			<if test="data.pwd != null">`pwd`,</if>
			<if test="data.phone != null">`phone`,</if>
			<if test="data.realname != null">`realname`,</if>
			<if test="data.purseaddress != null">`purseaddress`,</if>
			<if test="data.publickey != null">`publickey`,</if>
			<if test="data.privatekey != null">`privatekey`,</if>
			<if test="data.voucher != null">`voucher`,</if>
			<if test="data.uuid != null">`uuid`,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="data.username != null">#{data.username},</if>
			<if test="data.pwd != null">#{data.pwd},</if>
			<if test="data.phone != null">#{data.phone},</if>
			<if test="data.realname != null">#{data.realname},</if>
			<if test="data.purseaddress != null">#{data.purseaddress},</if>
			<if test="data.publickey != null">#{data.publickey},</if>
			<if test="data.privatekey != null">#{data.privatekey},</if>
			<if test="data.voucher != null">#{data.voucher},</if>
			<if test="data.uuid != null">#{data.uuid},</if>
		</trim>
	</insert>

	<!-- 批量插入区块信息 -->
	<insert id="insertTranscationList" parameterType="java.util.List">
		insert into block_info(
		difficulty,extraData,gasLimit,
		gasUsed,hash,logsBloom,
		miner,nonce,block_info.number,
		parentHash,sha3Uncles,block_info.size,
		stateRoot,block_info.timestamp,totalDifficulty,
		transactions,transactionsRoot,uncles
		) VALUES
		<foreach collection="blockinfoBeanlist" item="trsList" index="index" open="(" close=")" separator=",">
			#{trsList.difficulty},#{trsList.extraData},#{trsList.gasLimit},
			#{trsList.gasUsed},#{trsList.hash},#{trsList.logsBloom},
			#{trsList.miner},#{trsList.nonce},#{trsList.number},
			#{trsList.parentHash},#{trsList.sha3Uncles},#{trsList.size},
			#{trsList.stateRoot},#{trsList.timestamp},#{trsList.totalDifficulty},
			#{trsList.transactions},#{trsList.transactionsRoot},#{trsList.uncles}
		</foreach>
	</insert>

	<update id="upt" parameterType="map">
		UPDATE userinfo
		<set>
			<if test="data.username != null">username = #{data.username},</if>
			<if test="data.pwd != null">pwd = #{data.pwd},</if>
			<if test="data.phone != null">phone = #{data.phone},</if>
			<if test="data.realname != null">realname = #{data.realname},</if>
			<if test="data.purseaddress != null">purseaddress = #{data.purseaddress},</if>
			<if test="data.publickey != null">publickey = #{data.publickey},</if>
			<if test="data.privatekey != null">privatekey = #{data.privatekey},</if>
			<if test="data.voucher != null">voucher = #{data.voucher},</if>
			<if test="data.uuid != null">uuid = #{data.uuid},</if>
		</set> WHERE id = #{data.id}
	</update>

	<delete id="del" parameterType="int">DELETE FROM userinfo WHERE id = #{data.id}</delete>
</mapper>